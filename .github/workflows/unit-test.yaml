# This workflow will build and test a Golang project

name: Run unit tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: changeme
          POSTGRES_DB: simplebank
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24.0"

      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.18.2/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate /usr/local/bin/migrate
          sudo chmod +x /usr/local/bin/migrate
          which migrate

      - name: Debug environment variables
        run: |
          echo "DB_DRIVER: $DB_DRIVER"
          echo "DB_SOURCE: $DB_SOURCE"
          echo "SERVER_ADDRESS: $SERVER_ADDRESS"
          echo "TOKEN_SYMMETRIC_KEY: $TOKEN_SYMMETRIC_KEY"
          echo "ACCESS_TOKEN_DURATION: $ACCESS_TOKEN_DURATION"
        env:
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_SOURCE: ${{ secrets.DB_SOURCE }}
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
          TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
          ACCESS_TOKEN_DURATION: ${{ secrets.ACCESS_TOKEN_DURATION }}

      - name: Wait for Postgres to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U root; do
            echo "Waiting for Postgres..."
            sleep 2
          done

      - name: Run migrations
        env:
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_SOURCE: ${{ secrets.DB_SOURCE }}
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
          TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
          ACCESS_TOKEN_DURATION: ${{ secrets.ACCESS_TOKEN_DURATION }}
        run: make migrateup

      - name: Run unit tests
        env:
          DB_DRIVER: ${{ secrets.DB_DRIVER }}
          DB_SOURCE: ${{ secrets.DB_SOURCE }}
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
          TOKEN_SYMMETRIC_KEY: ${{ secrets.TOKEN_SYMMETRIC_KEY }}
          ACCESS_TOKEN_DURATION: ${{ secrets.ACCESS_TOKEN_DURATION }}
        run: make test
